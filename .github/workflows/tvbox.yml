name: Diy All TVBox APK CI

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4

      - name: Clone the repository
        run: |
          # （1）OK影视版本 项目地址：https://github.com/FongMi/TV 支持直播多线路、自动换源、直播倍速，手机投屏；https://github.com/FongMi/Release/blob/fongmi/README.md
          # mobile = 手機版,leanback = 電視版,java = jar + js 爬蟲,python = jar + js + py 爬蟲,arm64_v8a = 64 位元,armeabi_v7a = 32 位元,dev = 內測版,kitkat = 4.x 版,release = 正式版
          git clone https://github.com/FongMi/TV
          # 加速度调整进度且直观、栏目类不能移到别的栏目、控制最大音量、exo支持设置surface_type、优化访问资源
          # git clone https://github.com/geneRocket/TV
          # （2）q215613905版本 项目地址：https://github.com/q215613905/TVBoxOS 支持直播回放；
          # git clone https://github.com/q215613905/TVBoxOS
          # （3）takagen99版本 项目地址：https://github.com/takagen99/Box 支持直播回放，界面美观；
          # git clone https://github.com/takagen99/Box

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      # - name: Extra Modify
      #   working-directory: TV
      #   run: |
      #     echo '修改VersionName'
      #     sed -i "/versionName/s#[0-9a-zA-Z_\.\'\"-]\+\$#\'${{ env.tag }}\'#" app/build.gradle
      #     sed -i "/android:text=/s#=\"#=\"${{ env.tag }}\\\\n\\\\n#" app/src/main/res/layout/dialog_about.xml
      #     echo 'crosswalk源，防挂'
      #     if grep -q 'crosswalk' build.gradle; then
      #       sed -i "/crosswalk/a\        maven { url 'https://o0halflife0o.github.io/crosswalk/releases/crosswalk/android/maven2' }" build.gradle
      #     else
      #       sed -i "/jitpack.io/a\        maven { url 'https://o0halflife0o.github.io/crosswalk/releases/crosswalk/android/maven2' }" build.gradle
      #     fi
      - name: Setup Python for OK影视
        uses: actions/setup-python@v5.2.0
        with:
          python-version: '3.10'

      - name: Build release with Gradle
        run: |
          # # takagen99版本
          # cd Box && chmod +x ./gradlew

          # q215613905版本
          # cd TVBoxOS && chmod +x ./gradlew

          # OK影视版本
          # cd TV && git checkout fongmi
          cd TV
          chmod +x ./gradlew

          # 20240908代码版本报错
          sed -i "s/DanmakuFlameMaster/dfm/" app/build.gradle
          sed -i "40a\import com.fongmi.android.tv.event.RefreshEvent;" app/src/leanback/java/com/fongmi/android/tv/ui/activity/LiveActivity.java
          cat app/src/leanback/java/com/fongmi/android/tv/ui/activity/LiveActivity.java
          # error : /home/runner/work/actions/actions/TV/app/src/mobile/res/layout-sw600dp/activity_video.xml:355:15: Error: The element type "LinearLayout" must be terminated by the matching end-tag "</LinearLayout>".
          # sed -i "158,165d" app/src/mobile/res/layout-sw600dp/activity_video.xml

          # ./gradlew clean assembleRelease
          ./gradlew clean assemblerelease --build-cache --parallel --daemon --warning-mode all
          # ls -R ./TV
          ls -R .
        # env:
        #   KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
      
      # https://github.com/o0HalfLife0o/TVBoxOSC/blob/master/.github/workflows/test.yml
      - name: find App APK file
        run: |
          mkdir -p ${{ github.workspace }}/apk/
          for file in `find ~ -name "*.apk" -print`; do
            mv "$file" ${{ github.workspace }}/apk/
          done

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-apk
          path: ${{ github.workspace }}/apk/*
          # path: TV/app/build/outputs/apk/release/*/*.apk
          if-no-files-found: error

  # deploy:
  #   name: Deploy to GitHub Releases
  #   needs: build
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #     - name: Get the APK
  #       id: get_apk
  #       uses: actions/download-artifact@v4
  #       with:
  #         name: app

  #     - name: Publish the APK to GitHub Releases
  #       uses: svenstaro/upload-release-action@v2
  #       with:
  #         prerelease: true
  #         asset_name: sslpinning-demo.apk
  #         file: ${{ steps.get_apk.outputs.download-path }}/app-release.apk
  #         tag: ${{ github.ref }}
  #         repo_token: ${{ secrets.GITHUB_TOKEN }}
